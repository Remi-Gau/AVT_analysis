function SVM = get_mvpa_classification(ROI)


% --------------------------------------------------------- %
%                     Analysis to perform                   %
% --------------------------------------------------------- %


%% Ipsi VS contra
SVM(1)     = struct('name', 'A Ipsi VS Contra', ...
                        'class', [1 2], ...
                        'ROI_2_analyse', 1:numel(ROI), ...
                        'Featpool', 1);
                    
SVM(end+1) = struct('name', 'V Ipsi VS Contra', ...
                        'class', [3 4], ...
                        'ROI_2_analyse', 1:numel(ROI), ...
                        'Featpool', 1);
                    
SVM(end+1) = struct('name', 'T Ipsi VS Contra', ...
                        'class', [5 6], ...
                        'ROI_2_analyse', 1:numel(ROI), ...
                        'Featpool', 1);

                    
%% Cross senses ipsi
SVM(end+1) = struct('name', 'A VS V Ipsi', ...
                        'class', [1 3], ...
                        'ROI_2_analyse', 1:numel(ROI), ...
                        'Featpool', 1);

SVM(end+1) = struct('name', 'A VS T Ipsi', ...
                        'class', [1 5], ...
                        'ROI_2_analyse',1:numel(ROI), ...
                        'Featpool', 1);
                    
SVM(end+1) = struct('name', 'V VS T Ipsi', ...
                        'class', [3 5], ...
                        'ROI_2_analyse', 1:numel(ROI), ...
                        'Featpool', 1);

                    
%% Cross senses ipsi
SVM(end+1) = struct('name', 'A VS V Contra', ...
                    'class', [2 4], ...
                    'ROI_2_analyse', 1, ...
                    'Featpool', 1);
                
SVM(end+1) = struct('name', 'A VS T Contra', ...
                    'class', [2 6], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 1);
                
SVM(end+1) = struct('name', 'V VS T Contra', ...
                    'class', [4 6], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 1);


%% Left VS Right
SVM(end+1) = struct('name', 'A_L VS A_R', ...
                    'class', [1 2], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);
                
SVM(end+1) = struct('name', 'V_L VS V_R', ...
                    'class', [3 4], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);
                
SVM(end+1) = struct('name', 'T_L VS T_R', ...
                    'class', [5 6], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);

                
%% Cross senses left
SVM(end+1) = struct('name', 'A_L VS V_L', ...
                    'class', [1 3], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);
                
SVM(end+1) = struct('name', 'A_L VS T_L', ...
                    'class', [1 5], ...
                    'ROI_2_analyse',1:numel(ROI), ...
                    'Featpool', 0);
                
SVM(end+1) = struct('name', 'V_L VS T_L', ...
                    'class', [3 5], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);

                
%% Cross senses right
SVM(end+1) = struct('name', 'A_R VS V_R', ...
                    'class', [2 4], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);
                
SVM(end+1) = struct('name', 'A_R VS T_R', ...
                    'class', [2 6], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);
                
SVM(end+1) = struct('name', 'V_R VS T_R', ...
                    'class', [4 6], ...
                    'ROI_2_analyse', 1:numel(ROI), ...
                    'Featpool', 0);


fprintf('\n\n')
for iSVM = 1:numel(SVM)
    fprintf('Classification %02.0f : %s\n', iSVM, SVM(iSVM).name)
end
fprintf('\n\n')

end