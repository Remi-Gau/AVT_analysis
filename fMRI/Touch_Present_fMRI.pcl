# --------------------------------------------------- #
#					           QUAERO							   #
# --------------------------------------------------- #
#include_once "C:\\Users\\Rémi\\Dropbox\\PhD\\Experiments\\MVPA_A_V_T\\stimlibrel.pcl"
#include_once "C:\\Users\\Rémi\\Dropbox\\PhD\\Experiments\\MVPA_A_V_T\\subroutines_tactile.pcl"

#include_once "U:\\A_V_T\\stimlibrel.pcl"

#loadLibrary();

#Stimulator licence BHAM
#initStimulator("8DD8J3C662984KL65UZ3LHJEEF5OTP");	
int SlotL=2;
int SlotR=3;

#Stimulator licence MPI CBS
#initStimulator("0348778LCCA6UL97STQMQNYFEAMIOU");	
#int SlotL=3;
#int SlotR=4;

#setProperty("local_buffer_size", 5000000);

#setDAC(0, 0);												# DAC 0 auf Pins "eingefahren" setzen
#setDAC(1, 4095);											# DAC 1 auf Pins "ausgefahren" setzen


# --------------------------------------------------- #
#					           PCL									#
# --------------------------------------------------- #
string DATE = date_time( "yyyy_mm_dd_hhnn" );


# --------------------------------------------------- #
#                USER INPUT REQUIRED                  #
# --------------------------------------------------- 
preset int Stimulus_Duration = 50; # ms
int Post_Stimulus_Duration = 250;

preset int SubjectNumber;

# Tactile
# tactile stim duration = 0.5*WaitTime*2*NumCycle [in ms]
# stim freq = 1/(0.5*WaitTime*2/1000)
double Tactile_Stimulus_Duration = 50.0; # ms
int NumCycle = 5;
int WaitTime = 10;
int NumCycleTarget=5; 
int IntervalTime=50;

if Stimulus_Duration == 50 then
	Tactile_Stimulus_Duration = 50.0; # ms
	NumCycle = 5;
	WaitTime = 10;
	NumCycleTarget=5; 
	IntervalTime=50;

elseif Stimulus_Duration == 80 then
	Tactile_Stimulus_Duration = 80.0; # ms
	NumCycle = 8;
	WaitTime = 10;
	NumCycleTarget=8; 
	IntervalTime=80;		
	
elseif Stimulus_Duration == 100 then
	Tactile_Stimulus_Duration = 100.0; # ms
	NumCycle = 10;
	WaitTime = 10;
	NumCycleTarget=10; 
	IntervalTime=100;
	
else
	Tactile_Stimulus_Duration = 200.0; # ms
	NumCycle = 20;
	WaitTime = 10;
	NumCycleTarget=20; 
	IntervalTime=200;
	
end;


# --------------------------------------------------- #
#                USER INPUT REQUIRED                  #
# --------------------------------------------------- #
string Text2Present = "This is ";

Text2Present.append("an fMRI run \n\n");

Text2Present.append("Tactile only trials ");		

ConfirmationTxt.set_caption(Text2Present);
ConfirmationTxt.redraw();
Confirmation.present();


# --------------------------------------------------- #
#                GETTING TRIALS LIST                  #
# --------------------------------------------------- #
array <int> TrialList[0];
array<int> Locations[0];

# Change directory where to save log files to and to read trial list from
string SubjectDirectory = "\Subject_";
SubjectDirectory.append(string(SubjectNumber));
SubjectDirectory.append("\\");
logfile_directory.append(SubjectDirectory);

term.print(logfile_directory);
term.print("\n");

# Set name for logfile for this subject and run
string LogFileName = logfile_directory;
LogFileName.append("Logfile_Subject_");
LogFileName.append(string(SubjectNumber));
LogFileName.append("_");
LogFileName.append(DATE);
LogFileName.append(".txt");
logfile.set_filename(LogFileName);
	
term.print(LogFileName);
term.print("\n");
	
	
# ------------------------------------------------------ #
#					           START									#
# ------------------------------------------------------ #
PictureBlueFixationCross.present();

Start_Trial.set_mri_pulse(1);
Start_Trial.present();

# ------------------------------------------------------ #
#					          MAIN LOOP 							   #
# ------------------------------------------------------ #
loop 

	int Location;
	int TrialType;
	int TrialIndex = 0;
	
until TrialIndex > 2

begin

	TrialType = 5+random(0, 1)*3;
	Location = 4+random(0, 1)*12;

	# Tactile
	if TrialType==5 then
		if Location<8  then
			#vibrationLeft_Trial(SlotL, NumCycle, WaitTime);
		elseif Location>8 then
			#vibrationRight_Trial(SlotR, NumCycle, WaitTime);
		end;
	elseif  TrialType==8 then
		if Location<8 then
			#vibrationLeft_Trial(SlotL, NumCycleTarget, WaitTime);
			#wait(1, IntervalTime);
			#vibrationLeft_Trial(SlotL, NumCycleTarget, WaitTime);
		elseif Location>8 then
			#vibrationRight_Trial(SlotR, NumCycleTarget, WaitTime);
			#wait(1, IntervalTime);
			#vibrationRight_Trial(SlotR, NumCycleTarget, WaitTime);
		end;
	end;
	
	
	# Present trial
	if TrialType == 5 then
		Tactile_Trial.present();
		#startStimulation();
		wait_interval(int(Tactile_Stimulus_Duration));
		#stopStimulation();
		PictureBlueFixationCross.present();
		wait_interval(Post_Stimulus_Duration);
	elseif TrialType == 8 then
		Tactile_Target.present();
		#startStimulation();
		wait_interval(int(Tactile_Stimulus_Duration));
		#stopStimulation();
		PictureBlueFixationCross.present();
		wait_interval(Post_Stimulus_Duration);
	end;
	
	ISI.present();
	
end;

#closeStimulator();
